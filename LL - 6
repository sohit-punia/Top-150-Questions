Given the head of a linked list, rotate the list to the right by k places.

int getLength(ListNode* head){
    int cnt = 1;
    ListNode* temp = head;
    while(temp ->next != NULL){
        cnt++;
       temp = temp->next;
    }
    return cnt;

}
    ListNode* rotateRight(ListNode* head, int k) {
    if (!head || !head->next)  return head;        
        int len = getLength(head);
        ListNode* temp = head;
        int cnt = 1;
        k %= len;
        if(k == 0) return head;
        while(cnt != (len - k)){
            temp = temp->next;
            cnt++;
        }
        ListNode* start = temp->next;
        temp->next = NULL;
        
        ListNode* temp2 = start;
        while(temp2 ->next){
            temp2 = temp2 ->next;
            cnt++;
        }
        temp2 ->next = head;
        return start;
    }
