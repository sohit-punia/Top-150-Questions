Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).


class Solution {
    bool check(TreeNode* left , TreeNode* right){
        if(left == NULL && right == NULL) return true;
        if(left == NULL || right == NULL) return false;

        if(left -> val != right->val ) return false;
        return check(left->left , right ->right) && check(left->right , right ->left);

    }
public:
    bool isSymmetric(TreeNode* root) {
        if(root == NULL ) return NULL;

        bool ans = check(root->left , root->right);
        return ans;

    }
};
