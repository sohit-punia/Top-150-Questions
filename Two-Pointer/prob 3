You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).

Find two lines that together with the x-axis form a container, such that the container contains the most water.

Return the maximum amount of water a container can store.

Notice that you may not slant the container.


    int maxArea(vector<int>& height) {
        int n = height.size();
        int start = 0;
        int end = n -1;
        int maxArea = 0;
        for(int i = 0; i< n; i++){
            int area = min(height[start] , height[end]) * (end - start);
            maxArea = max(maxArea , area);
            if(height[start] < height[end]) start++;
            else end--;
        }
        return maxArea;
    }
